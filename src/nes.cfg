MEMORY {
    ZP:     start = $00, size = $0100, type = rw, define = yes;
    RAM:    start = $0200, size = $0600, type = rw, define = yes;
    HDR:    start = $0000, size = $0010, type = ro, file = %O, fill = yes, fillval = $00;
    PRG_SWAP_A: start = $8000, size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    PRG_SWAP_B: start = $A000, size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
    PRG_FIX_C:  start = $C000, size = $2000, type = ro, file = %O, fill = yes, fillval = $00; # Fixed to second-to-last bank
    PRG_FIX_D:  start = $E000, size = $2000, type = ro, file = %O, fill = yes, fillval = $00; # Fixed to last bank (for RESET, NMI, IRQ vectors)
    CHR:    start = $0000, size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
}

SEGMENTS {
    HEADER:   load = HDR, type = ro, align = $10;
    STARTUP:  load = PRG_FIX_D, type = ro, define = yes;
    LOWCODE:  load = PRG_SWAP_B, type = ro, optional = yes;
    INIT:     load = PRG_SWAP_B, type = ro, define = yes, optional = yes;
    CODE:     load = PRG_SWAP_A, type = ro, define = yes;
    RODATA:   load = PRG_SWAP_A, type = ro, define = yes;
    VECTORS:  load = PRG_FIX_D, type = ro, start = $FFFA, optional = no;
    OAM_DATA: load = RAM, type = bss, start = $0200, define = yes, optional = yes;
    DATA:     load = RAM, type = rw, define = yes;
    BSS:      load = RAM, type = bss, define = yes;
    ZEROPAGE: load = ZP,  type = zp;
    CHRDATA:  load = CHR, type = ro, define = yes;
}

FEATURES {
    CONDES: segment = STARTUP,
            type = constructor,
            label = __CONSTRUCTOR_TABLE__,
            count = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
            type = destructor,
            label = __DESTRUCTOR_TABLE__,
            count = __DESTRUCTOR_COUNT__;
    CONDES: segment = INIT,
            type = interruptor,
            label = __INTERRUPTOR_TABLE__,
            count = __INTERRUPTOR_COUNT__;
}

SYMBOLS {
    __STACKSIZE__:    type = weak, value = $01F0; # 512 byte stack
}
